<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.green.hckh.repository.dao.teacher.GradingDao">

    <select id="findAllGradings" resultType="org.green.hckh.dto.teacher.grading.GradingDTO">
        SELECT g.user_id,
               a.test_no,
               SUM(IF(c.question_code = 'S', 1, 0))                        AS shortAs,
               SUM(IF(c.question_code = 'L', 1, 0))                        AS longAs,
               SUM(IF(c.question_code = 'N', 1, 0))                        AS multipleAs,
               SUM(IF(c.question_code = 'S' AND d.correct_yn = 'Y', 1, 0)) AS shortAsCount,
               SUM(IF(c.question_code = 'L' AND d.correct_yn = 'Y', 1, 0)) AS longAsCount,
               SUM(IF(c.question_code = 'N' AND d.correct_yn = 'Y', 1, 0)) AS multipleAsCount,
               SUM(IF(d.correct_yn = 'Y', c.question_score, 0))            AS score,
               a.cutline,
               e.name,
               e.delete_yn,
               f.confirm_yn,
               f.test_cnt,
               COUNT(d.user_id)                                            as isPossibleDetail
        FROM tbl_user_class g
                 LEFT JOIN tbl_class z ON z.class_no = g.class_no
                 LEFT JOIN tbl_schedule b ON b.class_no = z.class_no AND b.schedule_no = #{scheduleNo}
                 LEFT JOIN tbl_test a ON a.schedule_no = b.schedule_no
                 LEFT JOIN tbl_question c ON a.test_no = c.test_no
                 LEFT JOIN tbl_question_result d
                           ON c.question_no = d.question_no AND d.user_id = g.user_id AND c.test_no = d.test_no
                 LEFT JOIN tbl_user e ON g.user_id = e.user_id
                 LEFT JOIN tbl_score f ON e.user_id = f.user_id
        WHERE a.create_user_id = #{id}
        GROUP BY g.user_id
        ORDER BY score desc;
    </select>

    <insert id="updateConfirmed">
        update tbl_score
        set confirm_yn = 'Y'
        where user_id in
        <foreach collection="userIdList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </insert>

    <delete id="deleteUserQuestionResult">
        DELETE d
        FROM tbl_question_result d
        LEFT JOIN tbl_question q ON d.question_no = q.question_no
        LEFT JOIN tbl_test t ON q.test_no = t.test_no
        LEFT JOIN tbl_user_class g ON d.user_id = g.user_id
        WHERE d.user_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND t.test_no = #{testNo}
        and d.test_no = #{testNo}
    </delete>


    <update id="updateUserScore">
        UPDATE tbl_score
        SET score = 0,
        confirm_yn = 'N',
        test_cnt = test_cnt + 1
        WHERE user_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND test_no = #{testNo}
    </update>


    <!-- 문제와 상세보기와 매핑 -->
    <resultMap id="QuestionResultMap" type="org.green.hckh.dto.teacher.grading.QuestionDTO">
        <!-- 문제 정보 -->
        <id property="questionNo" column="question_no"/>
        <result property="testNo" column="test_no"/>
        <result property="questionTitle" column="question_title"/>
        <result property="questionScore" column="question_score"/>
        <result property="questionCode" column="question_code"/>
        <result property="questionResultNo" column="question_result_no"/>
        <result property="userId" column="user_id"/>
        <result property="answer" column="answer"/>
        <result property="correctYn" column="correct_yn"/>
        <result property="name" column="name"/>

        <!-- 문제 상세  리스트 -->
        <collection property="details" ofType="org.green.hckh.dto.teacher.grading.QuestionDetailDTO">
            <id property="questionDetailNo" column="question_detail_no"/>
            <result property="questionContent" column="question_content"/>
            <result property="correctYn" column="correct_yn"/>
        </collection>
    </resultMap>

    <select id="getQuestionsWithDetails" resultMap="QuestionResultMap">
        SELECT a.test_no,
               a.question_no,
               a.question_detail_no,
               a.question_content,
               b.question_title,
               b.question_score,
               b.question_code,
               c.question_result_no,
               c.user_id,
               c.answer,
               c.correct_yn,
               d.name
        FROM tbl_question_detail a
                 LEFT JOIN tbl_question b ON a.question_no = b.question_no AND a.test_no = b.test_no
                 LEFT JOIN tbl_question_result c ON b.question_no = c.question_no AND b.test_no = c.test_no
                 LEFT JOIN tbl_user d on c.user_id = d.user_id
        WHERE a.test_no = #{testNo}
          AND c.user_id = #{userId}
        GROUP BY a.question_detail_no, a.question_no
        ORDER BY a.question_no ASC, a.question_detail_no ASC;
    </select>


    <update id="updateUserQuestionResult">
        UPDATE tbl_question_result
        SET correct_yn = #{correct}
        where question_result_no = #{resultNo}
    </update>

    <update id="updateGradingUserScore">
        update tbl_score
        set score = #{score}
        where user_id = #{userId}
          and test_no = #{testNo}
    </update>

    <select id="scheduleTestAge" resultType="org.green.hckh.dto.teacher.grading.ScheduleTestScoreDto">
        SELECT a.schedule_no,
               a.schedule_name,
               a.start_date,
               a.end_date,
               d.name,
               AVG(CASE WHEN c.score IS NOT NULL THEN c.score ELSE 0 END) AS avgScore
        FROM tbl_schedule a
                 LEFT JOIN
             tbl_test b ON a.schedule_no = b.schedule_no
                 LEFT JOIN
             tbl_score c ON b.test_no = c.test_no
                 LEFT JOIN tbl_user d ON b.create_user_id = d.user_id
        WHERE b.create_user_id = #{userId}
        GROUP BY a.schedule_no,
                 a.schedule_name
        ORDER BY a.start_date;
    </select>


</mapper>